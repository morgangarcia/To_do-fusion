{"version":3,"file":"browser.es2015.es.js","sources":["../src/legacy-provider.js","../src/inject-declaration-compat-mixin.js","../src/server.js","../src/browser.js","../src/index.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Provides styletron instance via old context API\n */\n\nclass LegacyStyletronProvider extends React.Component {\n  getChildContext() {\n    return {styletron: this.styletron};\n  }\n  constructor(props, context) {\n    super(props, context);\n    this.styletron = props.value;\n  }\n  render() {\n    return React.Children.only(this.props.children);\n  }\n}\n\nLegacyStyletronProvider.childContextTypes = {\n  styletron: noop,\n};\n\nexport default LegacyStyletronProvider;\n\nfunction noop() {}\n","export const injectDeclarationCompatMixin = Base =>\n  class extends Base {\n    injectDeclaration({prop, val, media, pseudo}) {\n      let style = {[prop]: val};\n      if (pseudo) {\n        style = {\n          [pseudo]: style,\n        };\n      }\n      if (media) {\n        style = {\n          [media]: style,\n        };\n      }\n      return this.renderStyle(style);\n    }\n  };\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env node */\nimport React from 'react';\nimport {createPlugin, dangerouslySetHTML} from 'fusion-core';\nimport type {FusionPlugin} from 'fusion-core';\n\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {Server as Styletron} from 'styletron-engine-atomic';\n\nimport LegacyProvider from './legacy-provider.js';\nimport {injectDeclarationCompatMixin} from './inject-declaration-compat-mixin.js';\n\nconst StyletronCompat = injectDeclarationCompatMixin(Styletron);\n\nconst plugin =\n  __NODE__ &&\n  createPlugin({\n    middleware: () => (ctx, next) => {\n      if (ctx.element) {\n        const engine = new StyletronCompat();\n\n        ctx.element = (\n          <StyletronProvider value={engine}>\n            <LegacyProvider value={engine}>{ctx.element}</LegacyProvider>\n          </StyletronProvider>\n        );\n\n        return next().then(() => {\n          const stylesForHead = engine.getStylesheetsHtml();\n          ctx.template.head.push(dangerouslySetHTML(stylesForHead));\n        });\n      } else {\n        return next();\n      }\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<*, *>);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\nimport React from 'react';\nimport {createPlugin} from 'fusion-core';\nimport type {FusionPlugin} from 'fusion-core';\n\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\n\nimport LegacyProvider from './legacy-provider.js';\nimport {injectDeclarationCompatMixin} from './inject-declaration-compat-mixin.js';\n\nconst StyletronCompat = injectDeclarationCompatMixin(Styletron);\n\nlet engine;\n\nconst plugin =\n  __BROWSER__ &&\n  createPlugin({\n    middleware: () => (ctx, next) => {\n      if (ctx.element) {\n        if (!engine) {\n          engine = new StyletronCompat({\n            hydrate: document.getElementsByClassName('_styletron_hydrate_'),\n          });\n        }\n        ctx.element = (\n          <StyletronProvider value={engine}>\n            <LegacyProvider value={engine}>{ctx.element}</LegacyProvider>\n          </StyletronProvider>\n        );\n      }\n\n      return next();\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<*, *>);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\nimport {\n  styled,\n  withStyle,\n  withStyleDeep,\n  withTransform,\n  withWrapper,\n} from 'styletron-react';\n\nimport server from './server';\nimport browser from './browser';\n\ndeclare var __NODE__: Boolean;\n\nexport default (__NODE__ ? server : browser);\nexport {styled, withStyle, withStyleDeep, withTransform, withWrapper};\n"],"names":["LegacyStyletronProvider","React","Component","styletron","props","context","value","Children","only","children","childContextTypes","noop","injectDeclarationCompatMixin","Base","style","prop","val","pseudo","media","renderStyle","StyletronCompat","Styletron","engine","plugin","createPlugin","ctx","next","element","document","getElementsByClassName","StyletronProvider","LegacyProvider","browser"],"mappings":";;;;;;AAEA;;;;AAIA,MAAMA,uBAAN,SAAsCC,MAAMC,SAA5C,CAAsD;oBAClC;WACT;iBAAY,KAAKC;KAAxB;;;cAEUC,KAAZ,EAAmBC,OAAnB,EAA4B;UACpBD,KAAN,EAAaC,OAAb;SACKF,SAAL,GAAiBC,MAAME,KAAvB;;;WAEO;WACAL,MAAMM,QAAN,CAAeC,IAAf,CAAoB,KAAKJ,KAAL,CAAWK,QAA/B,CAAP;;;;;AAIJT,wBAAwBU,iBAAxB,GAA4C;aAC/BC;CADb;AAIA,AAEA,SAASA,IAAT,GAAgB;;ACzBT,MAAMC,+BAA+BC,QAC1C,cAAcA,IAAd,CAAmB;oBACC;QAAA;OAAA;SAAA;;GAAlB,EAA8C;QACxCC,QAAQ;OAAEC,IAAD,GAAQC;KAArB;;QACIC,MAAJ,EAAY;cACF;SACLA,MAAD,GAAUH;OADZ;;;QAIEI,KAAJ,EAAW;cACD;SACLA,KAAD,GAASJ;OADX;;;WAIK,KAAKK,WAAL,CAAiBL,KAAjB,CAAP;;;CAdC;;ACAP;;;;;;;;;;ACAA;;;;;;;;;AASA,AAUA,MAAMM,oBAAkBR,6BAA6BS,MAA7B,CAAxB;AAEA,IAAIC,MAAJ;AAEA,MAAMC,WACJ,QACAC,aAAa;cACC,MAAM,CAACC,GAAD,EAAMC,IAAN,KAAe;QAC3BD,IAAIE,OAAR,EAAiB;UACX,CAACL,MAAL,EAAa;iBACF,IAAIF,iBAAJ,CAAoB;mBAClBQ,SAASC,sBAAT,CAAgC,qBAAhC;SADF,CAAT;;;UAIEF,OAAJ,GACE,oBAACG,QAAD;eAA0BR;SACxB,oBAACS,uBAAD;eAAuBT;SAASG,IAAIE,OAApC,CADF,CADF;;;WAOKD,MAAP;;CAfJ,CAFF;;ACvBA;;;;;;;;;AASA,AAaA,YAAoCM,QAApC;;;;"}
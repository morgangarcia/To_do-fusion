import { createPlugin } from 'fusion-core';
import { UniversalEventsToken } from 'fusion-plugin-universal-events';

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/* eslint-env browser,node */
var plugin = createPlugin({
  deps: {
    emitter: UniversalEventsToken
  },
  provides: function provides(_ref) {
    var emitter = _ref.emitter;

    if (process.env.NODE_ENV !== "production" && !emitter) {
      throw new Error("emitter is required, but was: " + emitter);
    }

    var service = function service(createStore) {
      return function () {
        var store = createStore.apply(void 0, arguments);
        return _objectSpread({}, store, {
          dispatch: function dispatch(action) {
            // $FlowFixMe
            emitter.from(store.ctx).emit('redux-action-emitter:action', action);
            return store.dispatch(action);
          }
        });
      };
    };

    return service;
  }
});

export default plugin;
//# sourceMappingURL=browser.es5.es.js.map

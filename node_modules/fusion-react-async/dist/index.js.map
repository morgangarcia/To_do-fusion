{"version":3,"file":"index.js","sources":["../src/constants.js","../src/prepared.js","../src/dispatched.js","../src/utils/isReactCompositeComponent.js","../src/prepare.js","../src/split.js","../src/traverse-exclude.js","../src/prepare-provider.js","../src/middleware.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const REACT_PREPARE = '@__REACT_PREPARE__@';\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {Component} from 'react';\n\nimport {REACT_PREPARE} from './constants';\n\nconst prepared = (prepare, opts = {}) => OriginalComponent => {\n  opts = Object.assign(\n    {\n      boundary: false,\n      defer: false,\n      componentDidMount: true,\n      componentWillReceiveProps: false,\n      componentDidUpdate: false,\n      contextTypes: {},\n      forceUpdate: false,\n    },\n    opts\n  );\n  const prep = {\n    prepare: (...args) => Promise.resolve(prepare(...args)),\n    defer: opts.defer,\n  };\n  class PreparedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n      this[REACT_PREPARE] = prep;\n    }\n    componentDidMount() {\n      if (opts.componentDidMount) {\n        Promise.resolve(prepare(this.props, this.context)).then(() => {\n          if (opts.forceUpdate) {\n            this.forceUpdate(); // TODO(#10) document\n          }\n        });\n      }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      if (opts.componentWillReceiveProps) {\n        prepare(nextProps, nextContext);\n      }\n    }\n\n    componentDidUpdate() {\n      if (opts.componentDidUpdate) {\n        prepare(this.props, this.context);\n      }\n    }\n\n    render() {\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n\n  const displayName =\n    OriginalComponent.displayName || OriginalComponent.name || '';\n  PreparedComponent.contextTypes = opts.contextTypes;\n  PreparedComponent.displayName = `PreparedComponent(${displayName})`;\n\n  return PreparedComponent;\n};\n\nfunction isPrepared(CustomComponent) {\n  return (\n    CustomComponent[REACT_PREPARE] &&\n    typeof CustomComponent[REACT_PREPARE].prepare === 'function'\n  );\n}\n\nfunction getPrepare(CustomComponent) {\n  return CustomComponent[REACT_PREPARE] || {};\n}\n\nexport {isPrepared, getPrepare};\nexport default prepared;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\n\nimport prepared from './prepared';\n\nconst storeShape = PropTypes.shape({\n  dispatch: PropTypes.func.isRequired,\n});\n\nconst dispatched = (prepareUsingDispatch, opts = {}) => OriginalComponent => {\n  const prepare = (props, context) => {\n    return prepareUsingDispatch(props, context.store.dispatch);\n  };\n  const contextTypes = Object.assign(\n    {},\n    opts && opts.contextTypes ? opts.contextTypes : {},\n    {store: storeShape}\n  );\n  const preparedOpts = Object.assign({}, opts, {contextTypes});\n  return prepared(prepare, preparedOpts)(OriginalComponent);\n};\n\nexport default dispatched;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport default function isReactCompositeComponent(type) {\n  if (typeof type !== 'function') {\n    return false;\n  }\n  if (typeof type.prototype !== 'object') {\n    return false;\n  }\n  if (typeof type.prototype.render !== 'function') {\n    return false;\n  }\n  return true;\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport {isFragment, isContextConsumer, isContextProvider} from 'react-is';\n\nimport isReactCompositeComponent from './utils/isReactCompositeComponent';\nimport {isPrepared, getPrepare} from './prepared';\n\nfunction renderCompositeElementInstance(instance) {\n  const childContext = Object.assign(\n    {},\n    instance.context,\n    instance.getChildContext ? instance.getChildContext() : {}\n  );\n  if (instance.componentWillMount) {\n    instance.componentWillMount();\n  }\n  const children = instance.render();\n  return [children, childContext];\n}\n\nfunction prepareComponentInstance(instance) {\n  if (!isPrepared(instance)) {\n    return Promise.resolve({});\n  }\n  const prepareConfig = getPrepare(instance);\n  // If the component is deferred, skip the prepare step\n  if (prepareConfig.defer) {\n    return Promise.resolve(prepareConfig);\n  }\n  return prepareConfig.prepare(instance.props, instance.context).then(() => {\n    return prepareConfig;\n  });\n}\n\nfunction prepareElement(element, context) {\n  if (element === null || typeof element !== 'object') {\n    return Promise.resolve([null, context]);\n  }\n  const {type, props} = element;\n  if (\n    typeof type === 'string' ||\n    isFragment(element) ||\n    isContextConsumer(element) ||\n    isContextProvider(element)\n  ) {\n    return Promise.resolve([props.children, context]);\n  }\n  if (!isReactCompositeComponent(type)) {\n    return Promise.resolve([type(props, context), context]);\n  }\n  const CompositeComponent = type;\n  const instance = new CompositeComponent(props, context);\n  instance.props = props;\n  instance.context = context;\n  return prepareComponentInstance(instance, context).then(prepareConfig => {\n    // Stop traversing if the component is defer or boundary\n    if (prepareConfig.defer || prepareConfig.boundary) {\n      return Promise.resolve([null, context]);\n    }\n    return renderCompositeElementInstance(instance);\n  });\n}\n\n// TODO(#4) We can optimize this algorithm I think\nfunction _prepare(element, context) {\n  return prepareElement(element, context).then(([children, childContext]) => {\n    return Promise.all(\n      React.Children.toArray(children).map(child =>\n        _prepare(child, childContext)\n      )\n    );\n  });\n}\n\nfunction prepare(element, context = {}) {\n  context.__IS_PREPARE__ = true;\n  return _prepare(element, context).then(() => {\n    context.__IS_PREPARE__ = false;\n  });\n}\n\nexport default prepare;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport prepared from './prepared.js';\n\n// TODO(#6): Dry this up\nconst CHUNKS_KEY = '__CHUNK_IDS';\n\nconst contextTypes = {\n  splitComponentLoaders: PropTypes.array.isRequired,\n};\n\n// TODO(#7): Figure out what we are going to do with chunks/preloading\nif (__NODE__) {\n  contextTypes.preloadChunks = PropTypes.array.isRequired;\n}\n\nexport default function withAsyncComponent({\n  defer,\n  load,\n  LoadingComponent,\n  ErrorComponent,\n}) {\n  let AsyncComponent = null;\n  let error = null;\n  let chunkIds = [];\n\n  function WithAsyncComponent(props) {\n    if (error) {\n      return <ErrorComponent error={error} />;\n    }\n    if (!AsyncComponent) {\n      return <LoadingComponent />;\n    }\n    return <AsyncComponent {...props} />;\n  }\n  return prepared(\n    (props, context) => {\n      if (AsyncComponent) {\n        if (__NODE__) {\n          chunkIds.forEach(chunkId => {\n            context.preloadChunks.push(chunkId);\n          });\n        }\n        return Promise.resolve(AsyncComponent);\n      }\n\n      let componentPromise;\n      try {\n        componentPromise = load();\n      } catch (e) {\n        componentPromise = Promise.reject(e);\n      }\n      chunkIds = componentPromise[CHUNKS_KEY] || [];\n\n      if (__NODE__) {\n        chunkIds.forEach(chunkId => {\n          context.preloadChunks.push(chunkId);\n        });\n      }\n\n      const loadPromises = [\n        componentPromise,\n        ...context.splitComponentLoaders.map(loader => loader(chunkIds)),\n      ];\n\n      return Promise.all(loadPromises)\n        .then(([asyncComponent]) => {\n          // TODO(#8) .default is toolchain specific, breaks w/ CommonJS exports\n          AsyncComponent = asyncComponent.default;\n        })\n        .catch(err => {\n          error = err;\n          if (__BROWSER__)\n            setTimeout(() => {\n              throw err;\n            }); // log error\n        });\n    },\n    {defer, contextTypes, forceUpdate: true}\n  )(WithAsyncComponent);\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport prepared from './prepared.js';\n\n// Stops the traversal at this node. Useful for optimizing the prepare traversal\n// to visit the minimum number of nodes\nexport default prepared(Promise.resolve(), {\n  componentDidMount: false,\n  componentWillReceiveProps: false,\n  componentDidUpdate: false,\n  defer: true,\n});\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass PrepareProvider extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.splitComponentLoaders = [];\n    this.preloadChunks = props.preloadChunks;\n  }\n  getChildContext() {\n    return {\n      splitComponentLoaders: this.splitComponentLoaders,\n      preloadChunks: this.preloadChunks,\n    };\n  }\n  render() {\n    return React.Children.only(this.props.children);\n  }\n}\n\nPrepareProvider.childContextTypes = {\n  splitComponentLoaders: PropTypes.array.isRequired,\n  preloadChunks: PropTypes.array.isRequired,\n};\n\nexport default PrepareProvider;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\n\nimport type {Middleware} from 'fusion-core';\n\nimport PrepareProvider from './prepare-provider';\n\nconst middleware: Middleware = function(ctx, next) {\n  if (__NODE__ && !ctx.element) {\n    return next();\n  }\n  ctx.element = (\n    <PrepareProvider preloadChunks={ctx.preloadChunks}>\n      {ctx.element}\n    </PrepareProvider>\n  );\n  return next();\n};\n\nexport default middleware;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nimport dispatched from './dispatched';\nimport prepare from './prepare';\nimport prepared from './prepared';\nimport split from './split';\nimport exclude from './traverse-exclude';\nimport middleware from './middleware'; //typed\n\nconst prepareTyped: (\n  element: React.Element<any>\n) => Promise<React.ComponentType<any>> = prepare;\n\nconst preparedTyped: (\n  sideEffect: (props: Object, context: Object) => Promise<any>,\n  opts?: {\n    defer?: boolean,\n    boundary?: boolean,\n    componentDidMount?: boolean,\n    componentWillReceiveProps?: boolean,\n    componentDidUpdate?: boolean,\n    forceUpdate?: boolean,\n    contextTypes?: Object,\n  }\n) => (\n  Component: React.ComponentType<any>\n) => React.ComponentType<any> = prepared;\n\nconst splitTyped: (opts: {\n  load: () => Promise<any>,\n  LoadingComponent: React.ComponentType<any>,\n  ErrorComponent: React.ComponentType<any>,\n}) => React.ComponentType<any> = split;\n\nconst excludeTyped: (\n  Component: React.ComponentType<any>\n) => React.ComponentType<any> = exclude;\n\n// TODO(#3): Can we get ride of some of these exports?\nexport {\n  dispatched,\n  prepareTyped as prepare,\n  preparedTyped as prepared,\n  splitTyped as split,\n  excludeTyped as exclude,\n  middleware,\n};\n"],"names":["REACT_PREPARE","prepared","prepare","opts","OriginalComponent","Object","assign","prep","args","Promise","resolve","defer","PreparedComponent","Component","props","context","componentDidMount","then","forceUpdate","nextProps","nextContext","componentWillReceiveProps","componentDidUpdate","React","displayName","name","contextTypes","isPrepared","CustomComponent","getPrepare","storeShape","PropTypes","shape","func","isRequired","dispatched","prepareUsingDispatch","store","dispatch","preparedOpts","isReactCompositeComponent","type","prototype","render","renderCompositeElementInstance","instance","childContext","getChildContext","componentWillMount","children","prepareComponentInstance","prepareConfig","prepareElement","element","isFragment","isContextConsumer","isContextProvider","CompositeComponent","boundary","_prepare","all","Children","toArray","map","child","__IS_PREPARE__","CHUNKS_KEY","array","preloadChunks","withAsyncComponent","AsyncComponent","error","chunkIds","WithAsyncComponent","forEach","chunkId","push","componentPromise","load","e","reject","loadPromises","splitComponentLoaders","loader","asyncComponent","default","catch","err","PrepareProvider","only","childContextTypes","middleware","ctx","next","prepareTyped","preparedTyped","splitTyped","split","excludeTyped","exclude"],"mappings":"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"}